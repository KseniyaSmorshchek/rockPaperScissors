{"version":3,"sources":["actions/types.js","reducers/game.js","reducers/index.js","helpers/constants.js","components/symbol.js","components/board.js","components/gameStatus.js","components/playersChoice.js","components/preloader.js","actions/winnerActions.js","components/game.js","actions/startGame.js","components/howToPlay.js","components/header.js","components/footer.js","App.js","index.js"],"names":["UPDATE_WINNER","START_GAME","UPDATE_CHOICE","WINNER_IS_LOADING","initialState","user","choice","score","computer","userGameStatus","isLoading","rootReducer","combineReducers","game","state","arguments","length","undefined","action","type","Object","objectSpread","choiceData","scoreData","constants","symbols","maxScore","url","Symbol","props","symbol","clickHandler","react_default","a","createElement","className","onClick","data-value","src","concat","toLowerCase","alt","Board","boardSymbols","map","item","Fragment","components_symbol","GameStatus","status","isGameOver","PlayersChoice","hiddenClass","userChoice","computerChoice","Preloader","winnerIsLoading","bool","winnerFetchData","dispatch","getState","fetch","then","response","ok","Error","statusText","json","fetchData","gameData","calculateScore","catch","console","log","Game","handleClick","e","choiceUser","currentTarget","getAttribute","choiceComputer","Math","floor","random","_this","updateChoice","_this$props$game","_this$props$game2","this","board","playersChoice","preloader","gameStatus","startGame","Component","connect","_ref","HowToPlay","Link","to","Header","href","Footer","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","es","HashRouter","header","Route","path","exact","component","footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"iQAAaA,EAAgB,gBAChBC,EAAa,aACbC,EAAgB,gBAChBC,EAAoB,oBCI3BC,EAAe,CACnBC,KAAM,CACJC,OAAQ,KACRC,MAAO,GAETC,SAAU,CACRF,OAAQ,KACRC,MAAO,GAETE,eAAgB,GAChBC,WAAW,GCVEC,EAJKC,0BAAgB,CAClCC,KDqBa,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACb,KAAKjB,EACH,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEET,KAAKe,OAAAC,EAAA,EAAAD,CAAA,GACAN,EAAMT,KADP,CAEFC,OAAQY,EAAOI,WAAWjB,KAAKC,SAEjCE,SAASY,OAAAC,EAAA,EAAAD,CAAA,GACJN,EAAMN,SADH,CAENF,OAAQY,EAAOI,WAAWd,SAASF,WAIzC,KAAKN,EACH,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEET,KAAM,CACJC,OAAQQ,EAAMT,KAAKC,OACnBC,MAAOW,EAAOK,UAAUlB,KAAKE,OAE/BC,SAAU,CACRF,OAAQQ,EAAMN,SAASF,OACvBC,MAAOW,EAAOK,UAAUf,SAASD,OAEnCE,eAAgBS,EAAOK,UAAUd,iBAGrC,KAAKR,EACH,OAAOG,EAET,KAAKD,EACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBJ,UAAWQ,EAAOR,YACvC,QACE,OAAOI,8CErCEU,EAvBG,CAChBC,QAAS,CACP,OACA,MACA,YACA,QACA,QACA,SACA,QACA,MACA,SACA,OACA,OACA,QACA,QACA,OACA,YAEFC,SAAU,EACVC,IACE,qGCIWC,EArBA,SAAAC,GAAS,IACdC,EAAyBD,EAAzBC,OAAQC,EAAiBF,EAAjBE,aAEhB,OACEC,EAAAC,EAAAC,cAAA,UACEf,KAAK,SACLgB,UAAU,SACVC,QAASL,EACTM,aAAYP,GAEZE,EAAAC,EAAAC,cAAA,OAAKI,IAAG,QAAAC,OAAUT,EAAOU,cAAjB,QAAsCC,IAAKX,IACnDE,EAAAC,EAAAC,cAAA,YAAOJ,KCKEY,EAfD,SAAAb,GAAS,IACbE,EAA0BF,EAA1BE,aAAcN,EAAYI,EAAZJ,QAKhBkB,EAAelB,EAAQmB,IAAI,SAAAC,GAAI,OAAIb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,MAHpBhB,EAGoCe,EAFvDb,EAAAC,EAAAC,cAACa,EAAD,CAAQhB,aAAcA,EAAcD,OAAQA,MADzB,IAAAA,IAKrB,OAAOE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KAAGH,ICaGK,EAtBI,SAAAnB,GAAS,IAEtBoB,EADIxC,EAA+BoB,EAA/BpB,eAaR,OATEwC,EAJqCpB,EAAfqB,WAIhB,wBAAAX,OACe,SAAnB9B,EAA4B,WAAa,QAElCA,EACmB,SAAnBA,EAA4B,QAA5B,OAAA8B,OAA6C9B,GAE7C,GAGJuB,EAAAC,EAAAC,cAAA,UAAKe,ICJCE,EAXO,SAAAtB,GAQpB,OANEG,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAI,OAAiBV,EAAMuB,cACnCpB,EAAAC,EAAAC,cAAA,kBAAUL,EAAMwB,YAChBrB,EAAAC,EAAAC,cAAA,uBAAeL,EAAMyB,kBCKZC,EATG,kBAChBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCSG,SAASsB,EAAgBC,GAC9B,MAAO,CACLtC,KAAMhB,EACNO,UAAW+C,GAmBR,SAASC,EAAgB/B,GAC9B,OAAO,SAACgC,EAAUC,GAChBD,EAASH,GAAgB,IACzBK,MAAMlC,GACHmC,KAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAGvB,OADAP,EAASH,GAAgB,IAClBO,IAERD,KAAK,SAAAC,GAAQ,OAAIA,EAASI,SAC1BL,KAAK,SAAAM,GAhDL,IAAsB7C,EAiDrBoC,GAjDqBpC,EAqB7B,SAAwB6C,EAAWC,GAAU,IACnChE,EAAmBgE,EAAnBhE,KAAMG,EAAa6D,EAAb7D,SACRF,EAAS8D,EAAU/D,EAAKC,QAAQE,EAASF,QAE/C,MAAO,CACLD,KAAM,CACJE,MAAkB,QAAXD,EAAmBD,EAAKE,MAAQ,EAAIF,EAAKE,OAElDC,SAAU,CACRD,MAAkB,SAAXD,EAAoBE,EAASD,MAAQ,EAAIC,EAASD,OAE3DE,eAAgBH,GAiBUgE,CAAeF,EAAWR,IAAW/C,MAhD1D,CACLM,KAAMnB,EACNuB,iBAgDGgD,MAAM,kBAAMC,QAAQC,IAAI,gBC3CzBC,6MACJC,YAAc,SAAAC,GACZ,IAAMC,EAAaD,EAAEE,cAAcC,aAAa,cAC1CC,EAAiBxD,EAAUC,QAAQwD,KAAKC,MAAsB,GAAhBD,KAAKE,WAEzDC,EAAKvD,MAAMwD,aAAa,CACtBhF,KAAM,CACJC,OAAQuE,EACRtE,MAAO,GAETC,SAAU,CACRF,OAAQ0E,EACRzE,MAAO,KAGX6E,EAAKvD,MAAM6B,gBAAgBlC,EAAUG,QAGvCuB,WAAa,WAAM,IAAAoC,EACUF,EAAKvD,MAAMhB,KAA9BR,EADSiF,EACTjF,KAAMG,EADG8E,EACH9E,SAEd,OACEH,EAAKE,QAAUiB,EAAUE,UAAYlB,EAASD,QAAUiB,EAAUE,kFAI7D,IAAA6D,EAC+CC,KAAK3D,MAAMhB,KAAzDR,EADDkF,EACClF,KAAMG,EADP+E,EACO/E,SAAUC,EADjB8E,EACiB9E,eAAgBC,EADjC6E,EACiC7E,UAClC0C,EAAcoC,KAAKtC,aAAe,SAAW,GAEnD,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UACU9B,EAAKE,MADf,MACyBC,EAASD,OAElCyB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,cAAAI,OAAgBa,IAC5BpB,EAAAC,EAAAC,cAACuD,EAAD,CAAO1D,aAAcyD,KAAKb,YAAalD,QAASD,EAAUC,WAE5DO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACwD,EAAD,CACEtC,YAAaA,EACbC,WAAYhD,EAAKC,OACjBgD,eAAgB9C,EAASF,SAE1BI,EACCsB,EAAAC,EAAAC,cAACyD,EAAD,CAAWjF,UAAWA,IAEtBsB,EAAAC,EAAAC,cAAC0D,EAAD,CACEnF,eAAgBA,EAChByC,WAAYsC,KAAKtC,gBAIvBlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEf,KAAK,SACLgB,UAAS,aAAAI,OAAeiD,KAAKtC,aAAe,GAAK,UACjDd,QAASoD,KAAK3D,MAAMgE,WAHtB,sBAtDSC,aA+EJC,kBAZS,SAAAC,GAAA,MAAe,CACrCnF,KADsBmF,EAAGnF,OAI3B,SAA4B8C,GAC1B,MAAO,CACLkC,UAAW,kBAAMlC,EChFZ,CACLxC,KAAMlB,KDgFNoF,aAAc,SAAA/D,GAAU,OAAIqC,ED3EzB,SAAsBrC,GAC3B,MAAO,CACLH,KAAMjB,EACNoB,cCwEqC+D,CAAa/D,KAClDoC,gBAAiB,SAAA/B,GAAG,OAAIgC,EAASD,EAAgB/B,OAItCoE,CAGbrB,WE3EauB,EAdG,kBAChBjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,+BAC8BH,EAAAC,EAAAC,cAAA,WAD9B,0DAEyDF,EAAAC,EAAAC,cAAA,WAFzD,oCAGmCF,EAAAC,EAAAC,cAAA,WAHnC,uEAMAF,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAG,IAAIhE,UAAU,aAAvB,mBCCWiE,EATA,kBACbpE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,KAAGmE,KAAK,IAAIlE,UAAU,QACpBH,EAAAC,EAAAC,cAAA,OAAKI,IAAI,gBAAgBG,IAAI,UAE/BT,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAMC,GAAG,gBAAT,kBCAWG,EANA,kBACbtE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4CCUEqE,EAAQC,sBACZ7F,EACA8F,8BAAoBC,0BAAgBC,OAkBvBC,EAfH,kBACV5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAUN,MAAOA,GACfvE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACEd,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzC,IACjC1C,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAWlB,KAExCjE,EAAAC,EAAAC,cAACkF,EAAD,UCxBRC,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ed1ec169.chunk.js","sourcesContent":["export const UPDATE_WINNER = 'UPDATE_WINNER';\r\nexport const START_GAME = 'START_GAME';\r\nexport const UPDATE_CHOICE = 'UPDATE_CHOICE';\r\nexport const WINNER_IS_LOADING = 'WINNER_IS_LOADING';\r\n","import {\r\n  UPDATE_WINNER,\r\n  START_GAME,\r\n  UPDATE_CHOICE,\r\n  WINNER_IS_LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  user: {\r\n    choice: null,\r\n    score: 0,\r\n  },\r\n  computer: {\r\n    choice: null,\r\n    score: 0,\r\n  },\r\n  userGameStatus: '',\r\n  isLoading: false,\r\n};\r\n\r\n// const initialState2 = {\r\n//   choice: [],\r\n//   score: [0, 0],\r\n// };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CHOICE:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          choice: action.choiceData.user.choice,\r\n        },\r\n        computer: {\r\n          ...state.computer,\r\n          choice: action.choiceData.computer.choice,\r\n        },\r\n      };\r\n\r\n    case UPDATE_WINNER:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          choice: state.user.choice,\r\n          score: action.scoreData.user.score,\r\n        },\r\n        computer: {\r\n          choice: state.computer.choice,\r\n          score: action.scoreData.computer.score,\r\n        },\r\n        userGameStatus: action.scoreData.userGameStatus,\r\n      };\r\n\r\n    case START_GAME:\r\n      return initialState;\r\n\r\n    case WINNER_IS_LOADING:\r\n      return { ...state, isLoading: action.isLoading };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport game from './game';\r\n\r\nconst rootReducer = combineReducers({\r\n  game,\r\n});\r\n\r\nexport default rootReducer;\r\n","const constants = {\r\n  symbols: [\r\n    'Rock',\r\n    'Gun',\r\n    'Lightning',\r\n    'Devil',\r\n    'Paper',\r\n    'Dragon',\r\n    'Water',\r\n    'Air',\r\n    'Sponge',\r\n    'Wolf',\r\n    'Tree',\r\n    'Human',\r\n    'Snake',\r\n    'Fire',\r\n    'Scissors',\r\n  ],\r\n  maxScore: 3,\r\n  url:\r\n    'https://raw.githubusercontent.com/hamanovich/py-100days/master/13-15-text-games/battle-table.json',\r\n};\r\n\r\nexport default constants;\r\n","import React from 'react';\r\nimport { string, func } from 'prop-types';\r\n\r\nconst Symbol = props => {\r\n  const { symbol, clickHandler } = props;\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"symbol\"\r\n      onClick={clickHandler}\r\n      data-value={symbol}\r\n    >\r\n      <img src={`/img/${symbol.toLowerCase()}.svg`} alt={symbol} />\r\n      <span>{symbol}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nSymbol.propTypes = {\r\n  symbol: string.isRequired,\r\n  clickHandler: func.isRequired,\r\n};\r\n\r\nexport default Symbol;\r\n","import React from 'react';\r\nimport { func, array } from 'prop-types';\r\nimport Symbol from './symbol';\r\n\r\nconst Board = props => {\r\n  const { clickHandler, symbols } = props;\r\n\r\n  const renderSymbol = symbol => (\r\n    <Symbol clickHandler={clickHandler} symbol={symbol} />\r\n  );\r\n  const boardSymbols = symbols.map(item => <>{renderSymbol(item)}</>);\r\n\r\n  return <>{boardSymbols}</>;\r\n};\r\n\r\nBoard.propTypes = {\r\n  clickHandler: func.isRequired,\r\n  symbols: array.isRequired,\r\n};\r\nexport default Board;\r\n","import React from 'react';\r\nimport { string, bool } from 'prop-types';\r\n\r\nconst GameStatus = props => {\r\n  const { userGameStatus, isGameOver } = props;\r\n  let status;\r\n\r\n  if (isGameOver) {\r\n    status = `Game Over. Winner is ${\r\n      userGameStatus === 'lose' ? 'Computer' : 'User'\r\n    }`;\r\n  } else if (userGameStatus) {\r\n    status = userGameStatus === 'draw' ? 'Draw!' : `You ${userGameStatus}`;\r\n  } else {\r\n    status = '';\r\n  }\r\n\r\n  return <h4>{status}</h4>;\r\n};\r\n\r\nGameStatus.propTypes = {\r\n  userGameStatus: string.isRequired,\r\n  isGameOver: bool.isRequired,\r\n};\r\n\r\nexport default GameStatus;\r\n","import React from 'react';\r\n\r\nconst PlayersChoice = props => {\r\n  const choiceInfo = (\r\n    <div className={`choice-info ${props.hiddenClass}`}>\r\n      <h2>You: {props.userChoice}</h2>\r\n      <h2>Computer: {props.computerChoice}</h2>\r\n    </div>\r\n  );\r\n\r\n  return choiceInfo;\r\n};\r\n\r\nexport default PlayersChoice;\r\n","import React from 'react';\r\n\r\nconst Preloader = () => (\r\n  <div className=\"lds-ring\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default Preloader;\r\n","import { UPDATE_WINNER, UPDATE_CHOICE, WINNER_IS_LOADING } from './types';\r\n\r\nexport function updateWinner(scoreData) {\r\n  return {\r\n    type: UPDATE_WINNER,\r\n    scoreData,\r\n  };\r\n}\r\n\r\nexport function updateChoice(choiceData) {\r\n  return {\r\n    type: UPDATE_CHOICE,\r\n    choiceData,\r\n  };\r\n}\r\n\r\nexport function winnerIsLoading(bool) {\r\n  return {\r\n    type: WINNER_IS_LOADING,\r\n    isLoading: bool,\r\n  };\r\n}\r\n\r\nfunction calculateScore(fetchData, gameData) {\r\n  const { user, computer } = gameData;\r\n  const choice = fetchData[user.choice][computer.choice];\r\n\r\n  return {\r\n    user: {\r\n      score: choice === 'win' ? user.score + 1 : user.score,\r\n    },\r\n    computer: {\r\n      score: choice === 'lose' ? computer.score + 1 : computer.score,\r\n    },\r\n    userGameStatus: choice,\r\n  };\r\n}\r\n\r\nexport function winnerFetchData(url) {\r\n  return (dispatch, getState) => {\r\n    dispatch(winnerIsLoading(true));\r\n    fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        dispatch(winnerIsLoading(false));\r\n        return response;\r\n      })\r\n      .then(response => response.json())\r\n      .then(fetchData => {\r\n        dispatch(updateWinner(calculateScore(fetchData, getState().game)));\r\n      })\r\n      .catch(() => console.log('error'));\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport constants from '../helpers/constants';\r\nimport Board from './board';\r\nimport GameStatus from './gameStatus';\r\nimport PlayersChoice from './playersChoice';\r\nimport Preloader from './preloader';\r\nimport { updateChoice, winnerFetchData } from '../actions/winnerActions';\r\nimport startGame from '../actions/startGame';\r\n\r\nclass Game extends Component {\r\n  handleClick = e => {\r\n    const choiceUser = e.currentTarget.getAttribute('data-value');\r\n    const choiceComputer = constants.symbols[Math.floor(Math.random() * 15)];\r\n\r\n    this.props.updateChoice({\r\n      user: {\r\n        choice: choiceUser,\r\n        score: 2,\r\n      },\r\n      computer: {\r\n        choice: choiceComputer,\r\n        score: 2,\r\n      },\r\n    });\r\n    this.props.winnerFetchData(constants.url);\r\n  };\r\n\r\n  isGameOver = () => {\r\n    const { user, computer } = this.props.game;\r\n\r\n    return (\r\n      user.score === constants.maxScore || computer.score === constants.maxScore\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { user, computer, userGameStatus, isLoading } = this.props.game;\r\n    const hiddenClass = this.isGameOver() ? 'hidden' : '';\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <h1 className=\"score\">\r\n          Score: {user.score} - {computer.score}\r\n        </h1>\r\n        <div className={`game-board ${hiddenClass}`}>\r\n          <Board clickHandler={this.handleClick} symbols={constants.symbols} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <PlayersChoice\r\n            hiddenClass={hiddenClass}\r\n            userChoice={user.choice}\r\n            computerChoice={computer.choice}\r\n          />\r\n          {isLoading ? (\r\n            <Preloader isLoading={isLoading} />\r\n          ) : (\r\n            <GameStatus\r\n              userGameStatus={userGameStatus}\r\n              isGameOver={this.isGameOver()}\r\n            />\r\n          )}\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className={`start-btn ${this.isGameOver() ? '' : 'hidden'}`}\r\n            onClick={this.props.startGame}\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ game }) => ({\r\n  game,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    startGame: () => dispatch(startGame()),\r\n    updateChoice: choiceData => dispatch(updateChoice(choiceData)),\r\n    winnerFetchData: url => dispatch(winnerFetchData(url)),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Game);\r\n","import { START_GAME } from './types';\r\n\r\nexport default function startGame() {\r\n  return {\r\n    type: START_GAME,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HowToPlay = () => (\r\n  <div className=\"how-to-play\">\r\n    <p className=\"instruction\">\r\n      1. You make the move first. <br />\r\n      2. To make a move click on the symbol you have chosen. <br />\r\n      3. Wait for the computer choice. <br />\r\n      4. You and computer take turns until the score one of us reaches 3.\r\n    </p>\r\n    <Link to=\"/\" className=\"start-btn\">\r\n      Continue game\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default HowToPlay;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <a href=\"#\" className=\"logo\">\r\n      <img src=\"/img/logo.png\" alt=\"Logo\" />\r\n    </a>\r\n    <Link to=\"/how-to-play\">How to play?</Link>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <span>©2019 RockPaperScissors</span>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport rootReducer from './reducers';\r\nimport Game from './components/game';\r\nimport HowToPlay from './components/howToPlay';\r\nimport Header from './components/header';\r\nimport Footer from './components/footer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <>\r\n        <Header />\r\n        <main>\r\n          <Route path=\"/\" exact component={Game} />\r\n          <Route path=\"/how-to-play\" component={HowToPlay} />\r\n        </main>\r\n        <Footer />\r\n      </>\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}